<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd">
    <metadata>
        <id>JsonPoke.MSBuild</id>
        <version>1.0.7</version>
        <title>JsonPoke and JsonPeek build tasks</title>
        <authors>Manish Kumar,Toni Arte</authors>
        <owners>Manish Kumar</owners>
        <licenseUrl>https://bitbucket.org/Manishkp/jsonpeek.msbuild/raw/ce89c93089b2b253cc06530ed5e6c39f9e6a6d66/nugetSource/license.txt</licenseUrl>
        <projectUrl>https://bitbucket.org/Manishkp/jsonpeek.msbuild/</projectUrl>
        <requireLicenseAcceptance>true</requireLicenseAcceptance>
        <developmentDependency>true</developmentDependency>
        <description>JsonPoke and JsonPeek build tasks:
Usage :
JSON Poke: 
    1. &lt;JsonPoke JsonInputPath="$(MSBuildProjectDirectory)\Project.json" JValue="Empty-FromTest1" JPath="Project.Name"&gt;
&lt;/JsonPoke&gt;
2 a. &lt;JsonPoke JsonInputPath="$(MSBuildProjectDirectory)\Project.json" JArray="@(TestArray1)" JPath="Project.TestArray" Metadata="MyProp;Identity"&gt;
&lt;/JsonPoke&gt;
2 b. &lt;JsonPoke JsonInputPath="$(MSBuildProjectDirectory)\Project.json" JArray="t11.txt;t22.txt" JPath="Project.TestArray1"&gt;
&lt;/JsonPoke&gt;
3. &lt;JsonPoke JsonInputPath="$(MSBuildProjectDirectory)\Project.json" JObject="@(BuildNumber)" JPath="Project.TestObject" Metadata="Major;Minor;Build"&gt;
    &lt;PropertyGroup&gt;
      &lt;JsonContent&gt;
        &lt;![CDATA[{ 
  "Projects":[
 { "Name": "P1",  "OutputFile": "P1.json",    "Variables": [  "Var1", "Var2" ]},
 {  "Name": "P2", "OutputFile": "P2.json",    "Variables": [  "Var1", "Var2"  ] } ] }
]]&gt;
      &lt;/JsonContent&gt;
    &lt;/PropertyGroup&gt;
    &lt;JsonPeek JPath="$.Projects" JsonContent="$(JsonContent)"&gt;    
      &lt;Output TaskParameter="Result" ItemName="TestProjects" /&gt;
    &lt;/JsonPeek&gt;
    &lt;Message Text="Project.IncludedLibraryVariableSetIds[?(@.Name == 'Lib-69')].Value : @(Lib69Value)" /&gt;
    &lt;Message Text="Project values: %(TestProjects.Name)" /&gt;</description>
        <summary>JsonPoke and JsonPeek build tasks</summary>
        <releaseNotes>1.0.2: Added JPath derived from Newtonsoft.json http://james.newtonking.com/archive/2014/02/01/json-net-6-0-release-1-%E2%80%93-jsonpath-and-f-support
			1.0.4 : Fixing JSONPeek to return ITaskItem[] Result as output
			Upgrade to this version, Need change from .Value to .Result
			1.0.5 : Support for JsonContent and JsonInputPath.
			Upgrade to this version needs change from FullFilePath and JsonFile to one JsonInputPath property
			1.0.6 : JsonPeek enhancements:
			a. Returing Result as array if JPath points to an array.
			b. Returning Meaningfull object that simple strings, so support for batching: If the Result Item is an object, then we are exposing all attributes as metadata on the Result item. For Array of simple values like array of strings, "Value" metadata is exposed, so that %(array.Value) will work
			1.0.7 : JsonPoke: Support for setting Objects and Object array via JObject and JArray, along with Metadata properties.</releaseNotes>
        <tags>json jsonpeek jsonpoke</tags>
        <dependencies>
            <dependency id="Newtonsoft.Json" version="6.0.5" />
        </dependencies>
    </metadata>
    <files>
        <file src="JsonPoke.MSBuild.Targets" target="build\JsonPoke.MSBuild.Targets" />
        <file src="bin\Debug\JsonPeek.MSBuild.dll" target="tools\JsonPeek.MSBuild.dll" />
        <file src="bin\Debug\Newtonsoft.Json.dll" target="tools\Newtonsoft.Json.dll" />
        <file src="license.txt" target="license.txt" />
    </files>
</package>